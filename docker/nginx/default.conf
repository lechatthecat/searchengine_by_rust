server {
    # listen 80;
    # server_name test.com www.test.com;
    server_tokens off;

    # location /.well-known/acme-challenge/ {
    #     root /var/www/certbot;
    # }

    if ($request_uri ~* "[\x00-\x1F\x7F-\xFF]") {
        return 400;
    }

    # location / {
    #     # Redirect all HTTP requests to HTTPS
    #     return 301 https://$host$request_uri;
    # }

    # Specify the custom error page for 404
    error_page 404 /404.html;
    location = /404.html {
        root /frontend/out;  # Path to the directory containing the built Next.js app
        internal;
    }
}

server {
    # listen 443 ssl;
    # server_name test.com www.test.com;
    listen 80;
    server_name localhost;

    # ssl_certificate /etc/test/fullchain.pem;
    # ssl_certificate_key /etc/test/privkey.pem;
    # ssl_protocols TLSv1.2 TLSv1.3;

    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN";

    if ($request_uri ~* "[\x00-\x1F\x7F-\xFF]") {
        return 400;
    }

    # Proxy requests to the Rocket application
    location /api {
        limit_req zone=one burst=3 nodelay;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header Cache-Control "public, max-age=86400";

        proxy_buffering on;
        proxy_cache my_cache;
        proxy_cache_key "$scheme$proxy_host$uri$is_args$clean_args";
        proxy_cache_bypass 0;
        proxy_cache_valid 200 1000d; # Cache 200 responses 
        #proxy_cache_valid 404;  # Optionally cache 404s
        proxy_cache_lock on;
        proxy_ignore_headers Cache-Control Expires Set-Cookie;

        proxy_redirect http://searchengine:8000 /api;
        proxy_pass http://searchengine:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            return 204;
        }
    }

    # Serve static files from /frontend/out
    location / {
        limit_req zone=one burst=3 nodelay;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header Cache-Control "public, max-age=86400";

        proxy_buffering on;
        proxy_cache my_cache;
        proxy_cache_key "$scheme$proxy_host$uri$is_args$clean_args";
        proxy_cache_bypass 0;
        proxy_cache_valid 200 1000d; # Cache 200 responses 
        #proxy_cache_valid 404;  # Optionally cache 404s
        proxy_cache_lock on;

        root /frontend/out;
        try_files $uri $uri/ =404;

        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            return 204;
        }
    }

    # Additional configuration for static files
    location ~* \.(?:css|js|map|jpe?g|png|gif|ico|woff|woff2|ttf)$ {
        add_header Cache-Control "public, max-age=31536000";
        root /frontend/out;
        expires 1M;
        access_log off;
    }

    # Deny access to hidden files
    location ~ /\.(?!well-known).* {
        deny all;
    }

    # Specify the custom error page for 404
    error_page 404 /404.html;
    location = /404.html {
        root /frontend/out;  # Path to the directory containing the built Next.js app
        internal;
    }
}
