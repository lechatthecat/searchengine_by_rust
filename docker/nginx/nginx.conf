user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    server_tokens off;

    client_header_buffer_size 1k;
    large_client_header_buffers 2 1k;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    '$upstream_cache_status';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

	gzip on;
	gzip_disable "msie6";

	gzip_vary on;
	gzip_proxied any;
	gzip_comp_level 2;
	gzip_buffers 16 8k;
	gzip_http_version 1.1;
	gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=my_cache:500m max_size=5g inactive=365d use_temp_path=off;

    map $request_method $no_cache {
        default 1;  # Bypass cache for all methods except GET and HEAD
        GET 0;
        HEAD 0;
    }

    map $args $clean_args {
        ~*(.*)&_rsc=[^&]*(.*) $1$2;
        ~*(.*)_rsc=[^&]*&*(.*) $1$2;
        default $args;
    }

    # 1. Define a shared memory zone for rate limiting
    map $request_method $limit {
        OPTIONS         "";
        default         $binary_remote_addr;
    }
    limit_req_zone $limit zone=one:50m rate=5r/s;
    limit_conn_zone $binary_remote_addr zone=addr:100m;
    limit_req_status 429;
    
    include /etc/nginx/conf.d/*.conf;
}